
1.可以基于已经实现的FIFO算法，进行修改，得到Clock算法实现。
swap.c line 41:
sm = &swap_manager_fifo;
引用了FIFO算法的Swap管理器；实现Clock算法之后在此处替换即可。

在swap_fifo.c line 45:
init_mm函数中，初始化链表时应该首尾相接构造环形链表，并且加上一个指针指向最先调入的页面。
另外给每一个页表项加上一个访问位，初始置0，访问时可以用比特AND得到或修改访问位的值。

最后在swap_out_victim中，从指针当前位置顺序检查环形链表；
若访问位是0，则置换该页，指针移动到下一项；若访问位是1，则把访问位置0，
指针移动到下一项，重复这个过程直到找到可以置换的页面。
评价：
Clock是LRU和FIFO的折衷，会考虑过去访问情况，但是不很详细，而且它不动态调整页面在链表中的顺序，
只做标记。所以它的开销一般比LRU要小，因为LRU详细记录开销太大。对于未被访问的页面，
Clock退化为LRU，表现一样好，而对于被访问过的页面，Clock不记录准确访问顺序，
表现比LRU差但是比FIFO好。
